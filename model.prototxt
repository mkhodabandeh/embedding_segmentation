name: "embedding_model"
input: "data"
input_dim: 4
input_dim: 6
input_dim: 1
input_dim: 2

layer {
	name: "slicer_data"
	type: "Slice"
	bottom: "data"
	top: "neighbor1"
	top: "neighbor2"
	top: "neighbor3" 
	top: "neighbor4"
	top: "target"
	top: "negative"

}

layer {
	name: "context_sum"
	type: "Eltwise"
	eltwise_param {
		operation: SUM
		coeff: 0.25
		coeff: 0.25
		coeff: 0.25
		coeff: 0.25
	}
	bottom: "neighbor1"
	bottom: "neighbor2"
	bottom: "neighbor3"
	bottom: "neighbor4"
	top: "context_sum"
}

layer {
	name: "target_negative_diff"
	type: "Eltwise"
	eltwise_param {
		operation: SUM
		coeff: 1 
		coeff: -1	# subtract the second input from the first one
	}
	bottom: "target"
	bottom: "negative"
	top: "target_negative_diff"
}

layer {
	name: "embedding_function_context"
	type: "InnerProduct"
	bottom: "context_sum"
	top: "embedding_function_context"
	inner_product_param {
		num_output: 2
	}
	param {
		name: "embed_w"
		lr_mult: 1
                decay_mult: 1
	}
	param {
		name: "embed_b"
		lr_mult: 2
                decay_mult: 0
	}
}

layer {
	name: "embedding_function_target"
	type: "InnerProduct"
	bottom: "target_negative_diff"
	top: "embedding_function_target"
	inner_product_param {
		num_output: 2
	}
	param {
		name: "embed_w"
		lr_mult: 1
		decay_mult: 1
	}
	param {
		name: "embed_b"
		lr_mult: 2
		decay_mult: 0
	}
}

layer {
	name: "loss"
		type: "Python"
	bottom: "embedding_function_context"
	bottom: "embedding_function_target"
	top: "loss"
	python_param {
		module: "my_dot_product_layer"
		layer:  "MyHingLossDotProductLayer"				
	}
}






